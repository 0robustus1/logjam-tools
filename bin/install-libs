#!/bin/bash
set -e

build_dir="builds/repos"
forced=0
prefix=/usr/local

test -z "$LSUDO" && LSUDO="sudo"
test "$(whoami)" = "root" && LSUDO=""

while (( $# > 0 )); do
    case "$1" in
        --help)
            echo "$0 [--force] [--build-dir dir] [--prefix dir] [install|uninstall]"; exit 0;;
        --force)
            forced=1; shift;;
        --build-dir)
            build_dir="$2"; shift 2;;
        --prefix )
            prefix="$2"; shift 2;;
        *) break ;;
    esac
done

if [ "$1" == "" ]; then
    cmd=install
else
    cmd=$1
    shift
fi

echo "library dependencies go into $prefix, forced=$forced, cmd=$cmd, build_dir=$build_dir"

mkdir -p $build_dir
cd $build_dir

case $OSTYPE in
    darwin*)
        CC=clang
        CXX=clang++
        ldconfig=/usr/bin/true
        ;;
    *)
        CC=gcc
        CXX=g++
        ldconfig=ldconfig
        ;;
esac

export CC CXX


function handle_rabbitmq()
{
    d=rabbitmq-c
    test -d $d || git clone https://github.com/alanxz/rabbitmq-c.git
    cd $d
    revision=$(git rev-parse HEAD)
    if [ "$revision" != "2b5d606bca429deed616339f460897aa41819a63" ]; then
        git reset --hard
        git fetch
        git checkout 2b5d606bca429deed616339f460897aa41819a63
    fi
    [ $forced == "1" ] && rm -f config.status
    test -f config.status || (autoreconf -i && ./configure --prefix=$prefix)
    [ $forced == "1" ] && make clean
    make
    $LSUDO make $cmd
    $LSUDO $ldconfig
    cd ..
}

function handle_mongoc()
{
    d=mongo-c-driver
    test -d $d || git clone https://github.com/mongodb/${d}.git
    cd $d
    revision=$(git rev-parse HEAD)
    expected_revision="2991dfb2ae62045fbb48d009448b86a6b2e54463"
    if [ "$revision" != "$expected_revision" ]; then
        git reset --hard
        git fetch
        git checkout $expected_revision
        git submodule update
    fi
    [ $forced == "1" ] && rm -f config.status
    test -f config.status || (sh autogen.sh && ./configure --prefix=$prefix --with-libbson=bundled)
    [ $forced == "1" ] && make clean
    make
    $LSUDO make $cmd
    $LSUDO $ldconfig
    cd ..
}

function handle_json_c()
{
    d=json-c
    test -d $d || git clone https://github.com/skaes/${d}.git
    cd $d
    revision=$(git rev-parse HEAD)
    if [ "$revision" != "36be1c4c7ade78fae8ef67280cd4f98ff9f81016" ]; then
        git reset --hard
        git fetch
        git checkout 36be1c4c7ade78fae8ef67280cd4f98ff9f81016
    fi
    [ $forced == "1" ] && rm -f config.status
    test -f config.status || (sh autogen.sh && ./configure --prefix=$prefix)
    [ $forced == "1" ] && make clean
    make
    $LSUDO make $cmd
    $LSUDO $ldconfig
    cd ..
}


function handle_sodium()
{
    d=libsodium-1.0.0
    f=${d}.tar.gz
    test -f $f || wget -nv https://github.com/jedisct1/libsodium/releases/download/1.0.0/$f
    test -d $d || tar xzvf $f
    cd $d
    [ $forced == "1" ] && rm -f config.status
    test -f config.status || ./configure --prefix=$prefix
    [ $forced == "1" ] && make clean
    make
    $LSUDO make $cmd
    $LSUDO $ldconfig
    cd ..
}

function handle_zeromq()
{
    d=zeromq-4.0.5
    f=${d}.tar.gz
    test -f $f || wget -nv http://download.zeromq.org/$f
    test -d $d || tar xzvf $f
    cd $d
    [ $forced == "1" ] && rm -f config.status
    test -f config.status || ./configure --prefix=$prefix CPPFLAGS=-I$prefix/include LDFLAGS=-L$prefix/lib
    [ $forced == "1" ] && make clean
    make
    $LSUDO make $cmd
    $LSUDO $ldconfig
    cd ..
}

function handle_czmq()
{
    d=czmq
    test -d $d || git clone https://github.com/skaes/${d}.git
    cd $d
    revision=$(git rev-parse HEAD)
    expected_revision="d74832083376ef4e03ea761fae1224c7ed9d14ae"
    if [ "$revision" != "" ]; then
        git reset --hard
        git fetch
        git checkout $expected_revision
    fi
    [ $forced == "1" ] && rm -f config.status
    test -f config.status || (sh autogen.sh && CPPFLAGS=-I$prefix/include LDFLAGS=-L$prefix/lib ./configure --prefix=$prefix)
    [ $forced == "1" ] && make clean
    make
    $LSUDO make $cmd
    $LSUDO $ldconfig
    cd ..
}

case $cmd in
    uninstall|clean)
        handle_czmq
        handle_zeromq
        handle_sodium
        handle_json_c
        handle_mongoc
        handle_rabbitmq
        ;;
    *)
        handle_rabbitmq
        handle_mongoc
        handle_json_c
        handle_sodium
        handle_zeromq
        handle_czmq
        ;;
esac
